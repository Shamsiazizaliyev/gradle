
import com.bmuschko.gradle.docker.tasks.image.Dockerfile



plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-remote-api' version "$dockerVersion" apply false
}
allprojects {
	apply plugin: 'java'
	apply plugin: 'com.bmuschko.docker-remote-api'
}

group = 'az.ingress'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task dockerFile(type: Dockerfile, dependsOn: assemble) {
	destFile.set(project.file('Dockerfile'))
	from 'openjdk:17'
	copyFile "build/libs/${project.name}-${project.version}.jar", '/app/'
	entryPoint 'java'
	defaultCommand '-jar', "/app/${project.name}-${project.version}.jar"
}


task dockerBuild( dependsOn: dockerFile ,type: Exec){
	println "${project.name}:${versionApp}"
	commandLine "docker", "build" ,  ".", "-t", "$dockerRepoUrl/${project.name}:${versionApp}" //comLine Execden gelir
}

task dockerPush(dependsOn: dockerBuild ,type: Exec){
	commandLine "docker", "push", "$dockerRepoUrl/${project.name}:${versionApp}"
	println "$dockerRepoUrl/${project.name}:${versionApp}"

}